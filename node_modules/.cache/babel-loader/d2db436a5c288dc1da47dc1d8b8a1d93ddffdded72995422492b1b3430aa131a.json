{"ast":null,"code":"var _jsxFileName = \"/home/anash-ansari/Downloads/connectingnepali-full-project/frontend/src/pages/LoginUI.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginUI() {\n  _s();\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Simulated login function — replace with real fetch/axios call\n  const fakeLogin = async (email, password) => {\n    if (email === 'test@example.com' && password === '123456') {\n      return {\n        success: true,\n        user: {\n          _id: '6647c3813c61a80014b7c155',\n          name: 'Ashima',\n          email: email\n        },\n        token: 'fake-jwt-token-123'\n      };\n    } else {\n      return {\n        success: false\n      };\n    }\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError('');\n\n    // Use fakeLogin or replace with real API\n    const response = await fakeLogin(form.email, form.password);\n    if (response.success) {\n      localStorage.setItem('user', JSON.stringify(response.user));\n      localStorage.setItem('token', response.token);\n      localStorage.removeItem('isNewToCanada'); // Optional: clear for fresh modal\n\n      navigate('/dashboard');\n    } else {\n      setError('Invalid email or password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-10 max-w-md mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: form.email,\n        onChange: handleChange,\n        className: \"border px-3 py-2 w-full rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: form.password,\n        onChange: handleChange,\n        className: \"border px-3 py-2 w-full rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-600 text-white px-4 py-2 rounded w-full\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginUI, \"NNagjnPkxyPPj7dtWtquUoKewjs=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginUI;\nexport default LoginUI;\nvar _c;\n$RefreshReg$(_c, \"LoginUI\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginUI","_s","form","setForm","email","password","error","setError","navigate","handleChange","e","target","name","value","fakeLogin","success","user","_id","token","handleLogin","preventDefault","response","localStorage","setItem","JSON","stringify","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/home/anash-ansari/Downloads/connectingnepali-full-project/frontend/src/pages/LoginUI.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction LoginUI() {\n  const [form, setForm] = useState({ email: '', password: '' });\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  // Simulated login function — replace with real fetch/axios call\n  const fakeLogin = async (email, password) => {\n    if (email === 'test@example.com' && password === '123456') {\n      return {\n        success: true,\n        user: {\n          _id: '6647c3813c61a80014b7c155',\n          name: 'Ashima',\n          email: email\n        },\n        token: 'fake-jwt-token-123'\n      };\n    } else {\n      return { success: false };\n    }\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    // Use fakeLogin or replace with real API\n    const response = await fakeLogin(form.email, form.password);\n\n    if (response.success) {\n      localStorage.setItem('user', JSON.stringify(response.user));\n      localStorage.setItem('token', response.token);\n      localStorage.removeItem('isNewToCanada'); // Optional: clear for fresh modal\n\n      navigate('/dashboard');\n    } else {\n      setError('Invalid email or password.');\n    }\n  };\n\n  return (\n    <div className=\"p-10 max-w-md mx-auto\">\n      <h2 className=\"text-2xl font-bold mb-4\">Login</h2>\n      <form onSubmit={handleLogin} className=\"space-y-4\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={form.email}\n          onChange={handleChange}\n          className=\"border px-3 py-2 w-full rounded\"\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={form.password}\n          onChange={handleChange}\n          className=\"border px-3 py-2 w-full rounded\"\n          required\n        />\n        <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded w-full\">\n          Login\n        </button>\n        {error && <p className=\"text-red-500 text-sm\">{error}</p>}\n      </form>\n    </div>\n  );\n}\n\nexport default LoginUI;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}