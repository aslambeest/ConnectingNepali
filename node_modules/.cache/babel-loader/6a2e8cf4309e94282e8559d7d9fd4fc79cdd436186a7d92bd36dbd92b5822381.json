{"ast":null,"code":"var _jsxFileName = \"/home/anash-ansari/ConnectingNepali/frontend/src/pages/Reset-Password.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPassword() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get('token');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleReset = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/api/auth/reset-password', {\n        token,\n        password\n      });\n      setMessage('✅ Password reset successful. You can now log in.');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || '❌ Failed to reset password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleReset,\n      className: \"bg-white p-6 shadow-md rounded w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4 text-center\",\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-4 text-center text-red-500\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"New Password\",\n        className: \"mb-4 w-full px-3 py-2 border rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700\",\n        children: \"Set New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"awGwV1pPFcmqZLgsIsp7px6TVvY=\", false, function () {\n  return [useSearchParams];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useSearchParams","jsxDEV","_jsxDEV","ResetPassword","_s","searchParams","token","get","password","setPassword","message","setMessage","handleReset","e","preventDefault","post","err","_err$response","_err$response$data","response","data","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/home/anash-ansari/ConnectingNepali/frontend/src/pages/Reset-Password.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function ResetPassword() {\n  const [searchParams] = useSearchParams();\n  const token = searchParams.get('token');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleReset = async (e) => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/api/auth/reset-password', { token, password });\n      setMessage('✅ Password reset successful. You can now log in.');\n    } catch (err) {\n      setMessage(err.response?.data?.error || '❌ Failed to reset password');\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <form onSubmit={handleReset} className=\"bg-white p-6 shadow-md rounded w-full max-w-md\">\n        <h2 className=\"text-xl font-semibold mb-4 text-center\">Reset Your Password</h2>\n        {message && <p className=\"mb-4 text-center text-red-500\">{message}</p>}\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"New Password\"\n          className=\"mb-4 w-full px-3 py-2 border rounded\"\n          required\n        />\n        <button\n          type=\"submit\"\n          className=\"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700\"\n        >\n          Set New Password\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,YAAY,CAAC,GAAGL,eAAe,CAAC,CAAC;EACxC,MAAMM,KAAK,GAAGD,YAAY,CAACE,GAAG,CAAC,OAAO,CAAC;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMf,KAAK,CAACgB,IAAI,CAAC,+CAA+C,EAAE;QAAET,KAAK;QAAEE;MAAS,CAAC,CAAC;MACtFG,UAAU,CAAC,kDAAkD,CAAC;IAChE,CAAC,CAAC,OAAOK,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZP,UAAU,CAAC,EAAAM,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcG,IAAI,cAAAF,kBAAA,uBAAlBA,kBAAA,CAAoBG,KAAK,KAAI,4BAA4B,CAAC;IACvE;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,2DAA2D;IAAAC,QAAA,eACxErB,OAAA;MAAMsB,QAAQ,EAAEZ,WAAY;MAACU,SAAS,EAAC,gDAAgD;MAAAC,QAAA,gBACrFrB,OAAA;QAAIoB,SAAS,EAAC,wCAAwC;QAAAC,QAAA,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC9ElB,OAAO,iBAAIR,OAAA;QAAGoB,SAAS,EAAC,+BAA+B;QAAAC,QAAA,EAAEb;MAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtE1B,OAAA;QACE2B,IAAI,EAAC,UAAU;QACfC,KAAK,EAAEtB,QAAS;QAChBuB,QAAQ,EAAGlB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC,cAAc;QAC1BX,SAAS,EAAC,sCAAsC;QAChDY,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF1B,OAAA;QACE2B,IAAI,EAAC,QAAQ;QACbP,SAAS,EAAC,8DAA8D;QAAAC,QAAA,EACzE;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACxB,EAAA,CAtCuBD,aAAa;EAAA,QACZH,eAAe;AAAA;AAAAmC,EAAA,GADhBhC,aAAa;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}